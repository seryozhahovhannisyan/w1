<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
        "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="nsTransactionWithdraw">

    <cacheModel id="cmTransactionWithdraw" type="LRU">
        <flushInterval hours="24"/>
        <property name="fileSize" value="1000"/>
    </cacheModel>

    <resultMap id="rmTransactionWithdrawSample" class="TransactionWithdraw">
        <result property="id" column="id" nullValue="0"/>
        <result property="finalState" column="final_state"/>
        <result property="walletId" column="wallet_id"/>
        <result property="setupId" column="setup_id"/>
        <result property="openedAt" column="opened_at"/>
        <result property="closedAt" column="closed_at"/>
        <result property="withdrawAmount" column="withdraw_amount"/>
        <result property="withdrawAmountCurrencyType" column="withdraw_amount_ct"/>
        <result property="walletTotalPrice" column="wallet_total_price"/>
        <result property="walletTotalPriceCurrencyType" column="wallet_total_price_ct"/>
        <result property="setupTotalAmount" column="setup_total_amount"/>
        <result property="setupTotalAmountCurrencyType" column="setup_total_amount_ct"/>

        <result property="processStartId" column="process_start_id"/>
        <result property="processEndId" column="process_end_id"/>
        <result property="taxId" column="tax_id"/>

        <result property="isEncoded" column="is_encoded"/>
        <result property="orderCode" column="order_code"/>
    </resultMap>

    <resultMap id="rmTransactionWithdrawFull" class="TransactionWithdraw">
        <result property="id" column="id" nullValue="0"/>
        <result property="finalState" column="final_state"/>
        <result property="walletId" column="wallet_id"/>
        <result property="setupId" column="setup_id"/>
        <result property="openedAt" column="opened_at"/>
        <result property="closedAt" column="closed_at"/>
        <result property="withdrawAmount" column="withdraw_amount"/>
        <result property="withdrawAmountCurrencyType" column="withdraw_amount_ct"/>
        <result property="withdrawMerchantTotalTax" column="withdraw_m_total_tax"/>
        <result property="withdrawMerchantTotalTaxCurrencyType" column="withdraw_m_total_tax_ct"/>
        <result property="walletTotalPrice" column="wallet_total_price"/>
        <result property="walletTotalPriceCurrencyType" column="wallet_total_price_ct"/>
        <result property="setupTotalAmount" column="setup_total_amount"/>
        <result property="setupTotalAmountCurrencyType" column="setup_total_amount_ct"/>

        <result property="processStart" column="process_start_id" select="nsTransactionWithdrawProcess.getById"/>
        <result property="processEnd" column="process_end_id" select="nsTransactionWithdrawProcess.getById"/>
        <result property="tax" column="tax_id" select="nsTransactionWithdrawTax.getById"/>

        <result property="isEncoded" column="is_encoded"/>
        <result property="orderCode" column="order_code"/>
    </resultMap>



    <insert id="add" parameterClass="TransactionWithdraw">
        INSERT INTO `w_t_withdraw` (
            `final_state`,
            `wallet_id`,
            `setup_id`,
            `opened_at`,
            `closed_at`,
            `withdraw_amount`,
            `withdraw_amount_ct`,
            `withdraw_m_total_tax`,
            `withdraw_m_total_tax_ct`,
            `wallet_total_price`,
            `wallet_total_price_ct`,
            `setup_total_amount`,
            `setup_total_amount_ct`,
            `process_start_id`,
            `process_end_id`,
            `merchant_withdraw_id`,
            `tax_id`,
            `is_encoded`,
            `order_code`
        ) VALUES (
            #finalState#,
            #walletId#,
            #setupId#,
            #openedAt#,
            #closedAt#,
            #withdrawAmount#,
            #withdrawAmountCurrencyType#,
            #withdrawMerchantTotalTax#,
            #withdrawMerchantTotalTaxCurrencyType#,
            #walletTotalPrice#,
            #walletTotalPriceCurrencyType#,
            #setupTotalAmount#,
            #setupTotalAmountCurrencyType#,
            #processStartId#,
            #processEndId#,
            #merchantWithdrawId#,
            #taxId#,
            #isEncoded#,
            #orderCode#
        )

        <selectKey keyProperty="id" resultClass="long">
            SELECT LAST_INSERT_ID() AS id
        </selectKey>

    </insert>

    <select id="getById" cacheModel="cmTransactionWithdraw" resultMap="rmTransactionWithdrawSample" parameterClass="long">
        SELECT * from `w_t_withdraw` WHERE `id` = #id#
    </select>

    <select id="getBy" cacheModel="cmTransactionWithdraw" resultMap="rmTransactionWithdrawFull" parameterClass="map">
        select * from `w_t_withdraw` where order_code = #orderCode# AND `wallet_id` = #walletId# AND `setup_id` = #setupId#
    </select>

    <select id="getUniqueByParams" cacheModel="cmTransactionWithdraw" resultMap="rmTransactionWithdrawFull" parameterClass="map">
        select * from `w_t_withdraw` where `wallet_id` = #walletId#  AND `final_state` = #finalState#
    </select>

    <select id="isOrderCode" resultClass="boolean" parameterClass="string">
        select count(`id`) from `w_t_withdraw` where order_code = #orderCode#
    </select>

    <update id="update" parameterClass="TransactionWithdraw">
        UPDATE `w_t_withdraw`
        SET `final_state` = #finalState#
            ,`closed_at` = #closedAt#

        WHERE `id` = #id#
    </update>

</sqlMap>
